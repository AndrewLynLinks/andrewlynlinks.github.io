{"version":3,"sources":["components/MoviePoster.js","components/Category.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["MoviePoster","_ref","id","image","title","index","react_default","a","createElement","className","react_router_dom","to","src","alt","Category","APIkey","_useState","useState","movies","_useState2","Object","slicedToArray","state","setState","getMovies","fetch","then","response","json","data","multiPageArray","moviepage","results","map","movie","posterPath","poster_path","plot","overview","userRating","vote_average","releaseDate","release_date","toConsumableArray","console","log","JSON","stringify","getJSONdata","useEffect","class","components_MoviePoster","Details","match","_useState3","_useState4","video1","setVideo1","_useState5","_useState6","video2","setVideo2","_useState7","_useState8","getVideos","params","movieID","data2","video","key","getJSONdataVideos","str","slice","parse","minutes","runtime","href","App","react_router","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8PAeeA,EAXK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIC,EAAPF,EAAOE,MAAcC,GAArBH,EAAcI,MAAdJ,EAAqBG,OAArB,OAChBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAWH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,YAAYT,GAAII,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASG,IAAKT,EAAOU,IAAK,qCAAqCT,OCwDvHU,MA1Df,SAAAb,GAA4BA,EAATc,OAAS,IAAAC,EAEEC,mBAAS,CAACC,OAAO,KAFnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEjBM,EAFiBH,EAAA,GAEVI,EAFUJ,EAAA,GAwBlBK,EAAY,WACdC,MAAM,uFACCC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAvBA,SAACA,EAAMC,GAGvB,IAAIC,EAAYF,EAAKA,KAAKG,QAAQC,IAAI,SAAAC,GAGhC,MAAO,CACDhC,GAAIgC,EAAMhC,GACVE,MAAO8B,EAAM9B,MACb+B,WAAYD,EAAME,YAClBC,KAAMH,EAAMI,SACZC,WAAYL,EAAMM,aAClBC,YAAaP,EAAMQ,gBAI/BnB,EAAS,CAAEL,OAAOE,OAAAuB,EAAA,EAAAvB,CAAKW,KACvBa,QAAQC,IAAI,WAAaC,KAAKC,UAAUhB,IAMtBiB,CAAY,CAACnB,YAOnC,OAJAoB,oBAAU,WACRzB,KACC,IAGClB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,eAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAWH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAUH,EAAAC,EAAAC,cAAA,KAAG0C,MAAM,6BAA5D,KACA5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVa,EAAMJ,OAAOe,IAAI,SAACC,EAAO7B,GAAR,OACVC,EAAAC,EAAAC,cAAC2C,EAAD,CACAjD,GAAIgC,EAAMhC,GACVG,MAAOA,EACPF,MAAO,iCAAwC+B,EAAMC,WACrD/B,MAAO8B,EAAM9B,YCiG1BgD,MAnJf,SAAAnD,GAA0B,IAARoD,EAAQpD,EAARoD,MAAQrC,EAEIC,mBAAS,CAACiB,MAAM,KAFpBf,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEfM,EAFeH,EAAA,GAERI,EAFQJ,EAAA,GAAAmC,EAGMrC,mBAAS,IAHfsC,EAAAnC,OAAAC,EAAA,EAAAD,CAAAkC,EAAA,GAGfE,EAHeD,EAAA,GAGPE,EAHOF,EAAA,GAAAG,EAIMzC,mBAAS,IAJf0C,EAAAvC,OAAAC,EAAA,EAAAD,CAAAsC,EAAA,GAIfE,EAJeD,EAAA,GAIPE,EAJOF,EAAA,GAAAG,EAKU7C,mBAAS,GALnB8C,EAAA3C,OAAAC,EAAA,EAAAD,CAAA0C,EAAA,GAyDdE,GAzDcD,EAAA,GAAAA,EAAA,GAyDF,WAChBtC,MAAM,sCAAwC4B,EAAMY,OAAOC,QAAU,oDAC9DxC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAhCM,SAACsC,EAAOrC,GAE9Bc,QAAQC,IAAI,WAAaC,KAAKC,UAAUoB,IAGxC,IAAIpC,EAAYoC,EAAMtC,KAAKG,QAAQC,IAAI,SAAAmC,GAGjC,MAAO,CACDC,IAAKD,EAAMC,OAKvBzB,QAAQC,IAAI,kBAAoBC,KAAKC,UAAUhB,EAAU,GAAGsC,MAC5DzB,QAAQC,IAAI,kBAAoBC,KAAKC,UAAUhB,EAAU,GAAGsC,MAG5DZ,EAAU1B,EAAU,GAAGsC,KACvBR,EAAU9B,EAAU,GAAGsC,KAaLC,CAAkB,CAACzC,aAQzC,OALAoB,oBAAU,YA/DYc,EAAA,GAAAA,EAAA,GAmDJ,WACdtC,MAAM,sCAAwC4B,EAAMY,OAAOC,QAAU,6CAC9DxC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OA/CA,SAACA,EAAMC,GAKvB,IAAIyC,EAAM1C,EAAKA,KAAKa,aACpB6B,EAAMA,EAAIC,MAAM,EAAE,GAElBjD,EAAS,CAAEW,MAAOY,KAAK2B,MAAM3B,KAAKC,UAAU,CACpC7C,GAAI2B,EAAKA,KAAK3B,GACdE,MAAOyB,EAAKA,KAAKzB,MACjB+B,WAAYN,EAAKA,KAAKO,YACtBC,KAAMR,EAAKA,KAAKS,SAChBC,WAAYV,EAAKA,KAAKW,aACtBkC,QAAS7C,EAAKA,KAAK8C,QACnBlC,YAAa8B,OAgCHvB,CAAY,CAACnB,eAWjCmC,KACC,IAGC1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAUH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOD,UAAU,QAAQE,GAAI,KAAKL,EAAAC,EAAAC,cAAA,KAAG0C,MAAM,4BAA3C,sBAE7B5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAWH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAUH,EAAAC,EAAAC,cAAA,KAAG0C,MAAM,8BAC5D5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAaa,EAAMY,MAAgCZ,EAAMY,MAAM9B,MAAnC,uBACtEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASG,IAAK,iCAAwCU,EAAMY,MAAMC,WAAYtB,IAAKS,EAAMY,MAAM9B,SACzIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWa,EAAMY,MAAMO,cACjEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWa,EAAMY,MAAMwC,QAAtC,UAC3BpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWa,EAAMY,MAAMK,WAAtC,QAC3BjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,UAAgCH,EAAAC,EAAAC,cAAA,WAAhC,cACtDF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAGXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWa,EAAMY,MAAMG,OAGrE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,cAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,KAAGoE,KAAM,mCAAmCpB,GAAQlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASG,IAAI,qBAC3GN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,cAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,KAAGoE,KAAM,mCAAmChB,GAAQtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASG,IAAI,qBAC3GN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,cAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBCrHhBoE,MAnBf,SAAA5E,GAAuB,IAATc,EAASd,EAATc,OAEZ,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACAJ,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOC,KAAM,oBAAqBC,UAAW5B,IAC7C9C,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAM,IAAKC,UAAWlE,KAEnCR,EAAAC,EAAAC,cAAA,SACGO,KCJSmE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShC,MACvB,2DCZNiC,IAASC,OAAOjF,EAAAC,EAAAC,cAACgF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnE,KAAK,SAAAoE,GACjCA,EAAaC","file":"static/js/main.d7884e80.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MoviePoster = ({ id, image, index, title}) => (\r\n    <div className=\"Section8\"><Link to={\"/details/\"+id}><img className=\"Image2\" src={image} alt={'Click to get details on the movie '+title} /></Link></div>              \r\n)\r\n\r\nMoviePoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MoviePoster\r\n","import React, { useState, useEffect } from 'react'\r\nimport MoviePoster from './MoviePoster'\r\n\r\nfunction Category({APIkey}) {     \r\n\r\n    const [state, setState] = useState({movies:[]});\r\n\r\n    const getJSONdata = (data, multiPageArray) => {\r\n    \r\n        //console.log(\"AllData:\" + JSON.stringify(data));\r\n        var moviepage = data.data.results.map(movie =>          \r\n            {\r\n              //console.log(\"Movie ID:\" + (movie.id));\r\n              return {\r\n                    id: movie.id,\r\n                    title: movie.title,\r\n                    posterPath: movie.poster_path,\r\n                    plot: movie.overview,\r\n                    userRating: movie.vote_average,\r\n                    releaseDate: movie.release_date\r\n                }\r\n            }      \r\n        );\r\n        setState({ movies: [...moviepage]});\r\n        console.log(\"AllData:\" + JSON.stringify(moviepage));            \r\n    }\r\n\r\n    const getMovies = () => {\r\n        fetch('https://api.themoviedb.org/3/movie/popular?api_key=3d2560b40244f01afa57b67b4f3390a1')\r\n              .then(response => response.json())\r\n              .then(data=>getJSONdata({data},[]));\r\n      }\r\n    \r\n    useEffect(() => {\r\n      getMovies();\r\n     },{});\r\n\r\n    return (\r\n        <div className=\"Sectionlimit\">            \r\n                <div className=\"Section1\"></div>\r\n                <div className=\"Section2\"></div>\r\n                <div className=\"Section3\">\r\n                    <div className=\"Header1\">Pop Movies</div>\r\n                </div>\r\n                <div className=\"Section4\"></div>\r\n                <div className=\"Section5\"><div className=\"Header1\"><i class=\"fas fa-ellipsis-v fa-1x\"></i></div> </div>\r\n                <div className=\"Section6\"></div>      \r\n                <div className=\"Section7\"></div>\r\n                    {state.movies.map((movie, index) =>\r\n                            <MoviePoster\r\n                            id={movie.id}\r\n                            index={index}\r\n                            image={\"http:\\/\\/image.tmdb.org\\/t\\/p\\/w185\" + movie.posterPath}\r\n                            title={movie.title}\r\n                            />\r\n                        )}\r\n               \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Details({match}) {\r\n\r\n    const [state, setState] = useState({movie:{}});\r\n    const [video1, setVideo1] = useState('');\r\n    const [video2, setVideo2] = useState('');\r\n    const [favorite, setFavorite] = useState(0);\r\n\r\n    const getJSONdata = (data, multiPageArray) => {\r\n    \r\n        //console.log(\"AllData:\" + JSON.stringify(data));\r\n        //console.log(\"Movie ID:\" + (data.data.title));\r\n\r\n        var str = data.data.release_date;\r\n        str = str.slice(0,4); //Get year\r\n\r\n        setState({ movie: JSON.parse(JSON.stringify({\r\n                id: data.data.id,\r\n                title: data.data.title,\r\n                posterPath: data.data.poster_path,\r\n                plot: data.data.overview,\r\n                userRating: data.data.vote_average,\r\n                minutes: data.data.runtime,\r\n                releaseDate: str\r\n            }))});        \r\n\r\n        //console.log(\"AllData:\" + JSON.stringify(state.movie));            \r\n    }\r\n\r\n    const getJSONdataVideos = (data2, multiPageArray) => {\r\n    \r\n        console.log(\"AllData:\" + JSON.stringify(data2));\r\n        //console.log(\"Movie ID:\" + (data.data.title));\r\n\r\n        var moviepage = data2.data.results.map(video =>          \r\n            {\r\n              //console.log(\"Movie ID:\" + (movie.id));\r\n              return {\r\n                    key: video.key\r\n                }\r\n            }      \r\n        );\r\n\r\n        console.log(\"AllMovieVideos:\" + JSON.stringify(moviepage[0].key));\r\n        console.log(\"AllMovieVideos:\" + JSON.stringify(moviepage[1].key));\r\n\r\n\r\n        setVideo1(moviepage[0].key);\r\n        setVideo2(moviepage[1].key);\r\n\r\n    }\r\n\r\n    const getMovies = () => {\r\n        fetch('https://api.themoviedb.org/3/movie/' + match.params.movieID + '?api_key=3d2560b40244f01afa57b67b4f3390a1')\r\n              .then(response => response.json())\r\n              .then(data=>getJSONdata({data},[]));\r\n      }\r\n    \r\n      const getVideos = () => {\r\n        fetch('https://api.themoviedb.org/3/movie/' + match.params.movieID + '/videos?api_key=3d2560b40244f01afa57b67b4f3390a1')\r\n              .then(response => response.json())\r\n              .then(data=>getJSONdataVideos({data},[]));\r\n      }\r\n\r\n    useEffect(() => {\r\n      getMovies();\r\n      getVideos();\r\n     },{});\r\n\r\n    return (\r\n        <div className=\"Sectionlimit\">            \r\n                <div className=\"Section1\"></div>\r\n                <div className=\"Section2\"></div>\r\n                <div className=\"Section3\">\r\n                    <div className=\"Header1\"><Link  className=\"Link1\" to={\"/\"}><i class=\"fas fa-arrow-left fa-1x\"></i>&nbsp;MovieDetails</Link></div>\r\n                </div>\r\n                <div className=\"Section4\"></div>\r\n                <div className=\"Section5\"><div className=\"Header1\"><i class=\"fas fa-ellipsis-v fa-1x\"></i></div></div>\r\n                <div className=\"Section6\"></div>      \r\n                <div className=\"Section7\"></div>\r\n                <div className=\"Section9\"></div>\r\n                <div className=\"Section10\"></div>\r\n                <div className=\"Section11\"><div className=\"Header2\">{!(state.movie) ? \" No movies found. \" : state.movie.title }</div></div>\r\n                <div className=\"Section12\"></div>\r\n                <div className=\"Section13\"></div>\r\n\r\n                <div className=\"Section14\"></div>\r\n                <div className=\"Section15\"></div>\r\n                <div className=\"Section16\"><img className=\"Image3\" src={\"http:\\/\\/image.tmdb.org\\/t\\/p\\/w154\" + state.movie.posterPath} alt={state.movie.title} /></div>\r\n                <div className=\"Section17\"></div>\r\n                <div className=\"Section18\">\r\n                    <div className=\"Section20\"><div className=\"Header3\">{state.movie.releaseDate}</div></div>    \r\n                    <div className=\"Section21\"></div>\r\n                    <div className=\"Section22\"><div className=\"Header4\">{state.movie.minutes} mins</div></div>\r\n                    <div className=\"Section23\"></div>\r\n                    <div className=\"Section24\"><div className=\"Header5\">{state.movie.userRating}/10</div></div>\r\n                    <div className=\"Section25\"></div>\r\n                    <div className=\"Section26\"><div className=\"Rectangle\"><div className=\"Header6\">MARK AS<br/>FAVORITE</div></div></div>\r\n                    <div className=\"Section27\"></div>\r\n                </div>\r\n                <div className=\"Section19\"></div>\r\n                <div className=\"Section28\"></div>\r\n               \r\n                \r\n                    <div className=\"Section30\"><div className=\"Header7\">{state.movie.plot}</div></div>\r\n                   \r\n\r\n                <div className=\"Section32\"></div>\r\n\r\n                <div className=\"Section33\"></div>\r\n                <div className=\"Section34\"></div>\r\n                <div className=\"Section35\"></div>\r\n\r\n                <div className=\"Section36\"></div>\r\n                \r\n                <div className=\"Section37\"></div>\r\n                <div className=\"Section38\"><div className=\"Header8\">Trailers:</div></div>\r\n                <div className=\"Section39\"></div>\r\n\r\n                <div className=\"Section40\"></div>\r\n\r\n                <div className=\"Section41\"></div>\r\n                <div className=\"Section42\"><a href={'https://www.youtube.com/watch?v='+video1}><img className=\"Image4\" src=\"playbutton.png\"/></a></div>\r\n                <div className=\"Section43\"></div>\r\n                <div className=\"Section44\"><div className=\"Header9\">Trailer 1</div></div>\r\n                <div className=\"Section45\"></div>\r\n\r\n                <div className=\"Section46\"></div>\r\n\r\n                <div className=\"Section33\"></div>\r\n                <div className=\"Section34\"></div>\r\n                <div className=\"Section35\"></div>\r\n\r\n                <div className=\"Section47\"></div>\r\n\r\n                <div className=\"Section41\"></div>\r\n                <div className=\"Section42\"><a href={'https://www.youtube.com/watch?v='+video2}><img className=\"Image4\" src=\"playbutton.png\"/></a></div>\r\n                <div className=\"Section43\"></div>\r\n                <div className=\"Section44\"><div className=\"Header9\">Trailer 2</div></div>\r\n                <div className=\"Section45\"></div>\r\n\r\n                <div className=\"Section48\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Details;","import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types'\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Category from './components/Category';\nimport Details from './components/Details';\n\nfunction App({APIkey}) {\n\n  return (\n    <div className=\"Section1\">\n        <Router>\n        <Route path={\"/details/:movieID\"} component={Details} />\n        <Route exact path={\"/\"} component={Category} /> \n        </Router>  \n        <p>\n          {APIkey}\n        </p>  \n    </div>\n  );\n}\n\nApp.propTypes = {\n  APIkey: PropTypes.string.isRequired  \n};\n\nexport default App;\n   ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}